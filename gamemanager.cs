using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
/// <summary>
/// –º–µ–Ω–µ–¥–∂–µ—Ä —Å—Ü–µ–Ω—ã. –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—Å–µ –≥–ª–∞–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
/// </summary>
public class GameManager : MonoBehaviour
{
    // –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –æ—á–∫–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è –∏ –¥–µ–Ω–µ–≥ –∏–≥—Ä–æ–∫–∞ –∏ –≤—Ä–∞–≥–∞
    public Text HP;
    public Text EnemyHP;
    public Text MoneyTxt;
    public Text Money2txt;

    // –≠—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–º–µ—Ä–µ –≤ –∏–≥—Ä–æ–≤–æ–π —Å—Ü–µ–Ω–µ
    private Camera Cam;

    // –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–Ω–µ–≥ —É –∏–≥—Ä–æ–∫–∞ –∏ –≤—Ä–∞–≥–∞ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
    public int Health = 100;
    public int EnemyHealth = 100;
    public int Money = 0;
    public int Money2 = 0;

    // –≠—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ –ø–æ–±–µ–¥—ã –∏–ª–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–∞
    public Image GameOverScreen;
    public Image WinningScreen;

    // –ú–∞—Å—Å–∏–≤ –¥–ª—è —É—Ä–æ–Ω–∞ –æ—Ç –±–æ—ë–≤
    public int[] dmg;

    // –°–ª–æ–≤–∞—Ä—å —Å–ª—É–∂–∏—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤—Ä–∞–≥–æ–≤ –∏ –∏—Ö —É—Ä–æ–Ω–∞
    public Dictionary<string, int> damag = new Dictionary<string, int>()
    {
        ["EasyEnemy"] = 1,
        ["NormalEnemy"] = 5,
        ["HardEnemy"] = 10
    };

    // –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
    public GameObject Player;

    // –≠–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–≥—Ä—ã
    public static GameManager ManagerInstance;

    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
    public Button btLeft;
    public Button btRight;

    // –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏–µ —Ü–µ–Ω—ã –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ä—É–∂–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –≤—Ä–∞–≥–∞
    public Text CostEasy1;
    public Text CostNormal1;
    public Text CostHard1;
    public Text CostEasy2;
    public Text CostNormal2;
    public Text CostHard2;
    /// <summary>
    /// –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
    /// </summary>
    private void Awake()
    {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        Check();

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        ManagerInstance = this;
    }
    /// <summary>
    /// –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ü–µ–Ω—ã
    /// </summary>
    void Start()
    {
        // –ö–æ–≥–¥–∞ –∏–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –∏—â–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–º–µ—Ä—ã –∏ –Ω–∞—á–∏–Ω–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–Ω–µ–≥
        Cam = FindObjectOfType<Camera>();

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É, —É–≤–µ–ª–∏—á–∏–≤–∞—é—â—É—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        StartCoroutine(MoneyGrow());

        // –≠–∫—Ä–∞–Ω—ã –ø–æ–±–µ–¥—ã –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏—è –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã
        GameOverScreen.gameObject.SetActive(false);
        WinningScreen.gameObject.SetActive(false);
    }
    /// <summary>
    /// –ü—Ä–∏—Ä–æ—Å—Ç –¥–µ–Ω–µ–≥
    /// </summary>
    /// <returns>–†–∞–∑ –≤ 1 —Å–µ–∫—É–Ω–¥—É +1$</returns>
    private IEnumerator MoneyGrow()
    {
        // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–Ω–µ–≥ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        Money++;
        Money2++;

        // –û–∂–∏–¥–∞–µ–º 1 —Å–µ–∫—É–Ω–¥—É –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —ç—Ç–æ —Å–Ω–æ–≤–∞
        yield return new WaitForSeconds(1f);

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É —Å–Ω–æ–≤–∞
        StartCoroutine(MoneyGrow());
    }
    /// <summary>
    /// –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä –æ–±–Ω–æ–≤–ª—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –∏ –¥–µ–Ω—å–≥–∏
    /// </summary>
    void FixedUpdate()
    {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–¥–æ—Ä–æ–≤—å—è –∏–≥—Ä–æ–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ
        HP.text = "–£ –≤–∞—Å " + Health;
        if (Health <= 0) GameOver();

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–¥–æ—Ä–æ–≤—å—è –≤—Ä–∞–≥–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
        EnemyHP.text = "–£ –≤—Ä–∞–≥–∞ " + EnemyHealth;
        if (EnemyHealth <= 0) WinGame();

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–Ω–µ–≥ –∏–≥—Ä–æ–∫–∞ –∏ –≤—Ä–∞–≥–∞
        MoneyTxt.text = "–£ –≤–∞—Å " + Money;
        Money2txt.text = "–£ –≤—Ä–∞–≥–∞ " + Money2;
    }
    /// <summary>
    /// –§—É–Ω–∫—Ü–∏—è, —É–º–µ–Ω—å—à–∞—é—â–∞—è –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –≤—Ä–∞–≥–∞
    /// </summary>
    /// <param name="count">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è</param>
    /// <param name="layer">–£—Ä–æ–≤–µ–Ω—å –º–∞—Å–∫–∏</param>
    public void DamagePlayer(int count, int layer)
    {
        // –ï—Å–ª–∏ —Å–ª–æ–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Ä–∞–≥—É(8), —É–º–µ–Ω—å—à–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –≤—Ä–∞–≥–∞, –∏–Ω–∞—á–µ —É–º–µ–Ω—å—à–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞
        if (layer == 8)
        {
            EnemyHealth -= count;
        }
        else Health -= count;
    }
    // –∫—Ä–∞—Å–∏–≤–æ–µ üòä
    /// <summary>
    /// –§—É–Ω–∫—Ü–∏—è, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∞—è –∏–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω –ø—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ
    /// </summary>
    public void GameOver()
    {
        // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏—è
        GameOverScreen.gameObject.SetActive(true);
    }
    /// <summary>
    /// –§—É–Ω–∫—Ü–∏—è, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∞—è —ç–∫—Ä–∞–Ω –ø–æ–±–µ–¥—ã
    /// </summary>
    public void WinGame()
    {
        // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –ø–æ–±–µ–¥—ã
        WinningScreen.gameObject.SetActive(true);
    }
    /// <summary>
    /// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã. –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ü–µ–Ω—É –∑–∞–Ω–æ–≤–æ
    /// </summary>
    public void RestartGame()
    {
        // –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ü–µ–Ω—ã –∑–∞–Ω–æ–≤–æ
        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);
    }
    /// <summary>
    /// –ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —É—Ä–æ–Ω–∞
    /// </summary>
    /// <param name="count">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–Ω–∞</param>
    public void DamageUnitTest(int count)
    {
        Destroy(gameObject);
    }
    /// <summary>
    /// –§—É–Ω–∫—Ü–∏—è, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –≤—ã–±–∏—Ä–∞—Ç—å —É—Ä–æ–Ω –∏–∑ –º–∞—Å—Å–∏–≤–∞ —É—Ä–æ–Ω–∞
    /// </summary>
    /// <param name="idDamag">ID —É—Ä–æ–Ω–∞ –≤ –º–∞—Å—Å–∏–≤–µ</param>
    /// <returns>–£—Ä–æ–Ω —Ä–∞–≤–Ω—ã–π –∑–Ω–∞—á–µ–Ω–∏—é –∏–∑ –º–∞—Å—Å–∏–≤–∞</returns>
    public int dmgChoice(int idDamag)
    {
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —É—Ä–æ–Ω
        return dmg[idDamag];
    }

    /// <summary>
    /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
    /// –ï—Å–ª–∏ —ç—Ç–æ –ê–Ω–¥—Ä–æ–∏–¥, —Ç–æ –≤–∫–ª—é—á–∞—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ —ç–∫—Ä–∞–Ω—É
    /// </summary>
    private void Check()
    {
        // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ UNITY_STANDALONE...
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ #if
        // –ü–ö, –Ω–æ—É—Ç–±—É–∫
#if UNITY_STANDALONE
        // –û—Ç–∫–ª—é—á–∞–µ—Ç game object btLeft
        btLeft.gameObject.SetActive(false);
        // –û—Ç–∫–ª—é—á–∞–µ—Ç game object btRight
        btRight.gameObject.SetActive(false);
// —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞ Android
#elif UNITY_ANDROID // –¢–∞–∫–∂–µ —Å –ø–æ–º–æ—â—å—é –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ UNITY_ANDROID
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç game object btLeft
        btLeft.gameObject.SetActive(true);
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç game object btRight
        btRight.gameObject.SetActive(true);
#elif Unity
#endif
    }
}
